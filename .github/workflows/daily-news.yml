name: 📰 Context Engineering Daily News

on:
  schedule:
    # Run daily at 20:00 UTC (5 AM KST next day)
    - cron: '0 20 * * *'
  workflow_dispatch: # Allow manual trigger
  push:
    branches: [ main ]
    paths:
      - 'context-engineering-news/src/**'
      - 'context-engineering-news/config/**'
      - '.github/workflows/daily-news.yml'

jobs:
  generate-news:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests beautifulsoup4 feedparser lxml jinja2 pytest
        pip install google-generativeai  # FREE Gemini API 🆓
    
    - name: Create necessary directories
      run: |
        cd context-engineering-news
        mkdir -p data docs
        
    - name: Scrape news data
      env:
        GH_PAT: ${{ secrets.GH_PAT || secrets.GITHUB_TOKEN }}
      run: |
        cd context-engineering-news
        # Set GitHub token for API calls (fallback to built-in token)
        export GITHUB_TOKEN="${GH_PAT}"
        python src/news_scraper.py
      continue-on-error: true
    
    - name: Generate AI summaries with Gemini (FREE!)
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: |
        cd context-engineering-news
        if [ -n "$GEMINI_API_KEY" ] && [ -f "src/ai_summarizer.py" ]; then
          echo "🚀 Running FREE Gemini AI summarization..."
          python src/ai_summarizer.py || echo "AI summarization failed, continuing without it"
        else
          echo "💡 Gemini API key not set - skipping AI enhancement"
          echo "To enable FREE AI features, add GEMINI_API_KEY to repository secrets"
        fi
      continue-on-error: true
    
    - name: Generate HTML newsletter
      run: |
        cd context-engineering-news
        echo "📰 Generating HTML newsletter..."
        ls -la templates/
        echo "Using template: templates/simple_newsletter.html"
        python src/html_generator.py
        echo "✅ HTML generation completed"
    
    - name: Generate RSS feed
      run: |
        cd context-engineering-news
        if [ -f "src/rss_generator.py" ]; then
          python src/rss_generator.py
        fi
      continue-on-error: true
    
    - name: Commit and push if changed
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add generated files from context-engineering-news directory
        git add context-engineering-news/data/ context-engineering-news/docs/
        
        # Check if there are any changes
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          # Create commit with news summary
          ITEM_COUNT=$(jq '.total_items' context-engineering-news/data/daily_news.json 2>/dev/null || echo "0")
          git commit -m "📰 Daily news update - $ITEM_COUNT items ($(date +'%Y-%m-%d'))"
          git push
        fi
    
    - name: Setup Pages
      if: github.ref == 'refs/heads/main'
      uses: actions/configure-pages@v4
    
    - name: Upload to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v3
      with:
        path: 'context-engineering-news/docs'
    
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      id: deployment
      uses: actions/deploy-pages@v4
    
    - name: Create release on significant updates
      if: github.ref == 'refs/heads/main'
      run: |
        ITEM_COUNT=$(jq '.total_items' context-engineering-news/data/daily_news.json 2>/dev/null || echo "0")
        
        # Create weekly release on Mondays or when item count is high
        if [ "$(date +%u)" = "1" ] || [ "$ITEM_COUNT" -gt "50" ]; then
          WEEK=$(date +'%Y-W%V')
          
          # Check if release already exists
          if ! gh release view "$WEEK" >/dev/null 2>&1; then
            echo "Creating weekly release $WEEK"
            
            # Create release notes
            echo "# Context Engineering News - Week $WEEK" > release_notes.md
            echo "" >> release_notes.md
            echo "✨ **This week's highlights:**" >> release_notes.md
            echo "- $ITEM_COUNT new articles collected" >> release_notes.md
            echo "- Updated categories and trending topics" >> release_notes.md
            echo "- Enhanced AI summarization" >> release_notes.md
            echo "" >> release_notes.md
            echo "🔗 **View the full newsletter:** [Context Engineering Daily](https://$(echo $GITHUB_REPOSITORY | tr '/' '.').github.io/$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)/)" >> release_notes.md
            
            gh release create "$WEEK" \
              --title "Context Engineering Daily - $WEEK" \
              --notes-file release_notes.md \
              context-engineering-news/data/daily_news.json context-engineering-news/docs/index.html
          fi
        fi
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: true
    
    - name: Create failure report
      if: failure()
      run: |
        echo "📋 Daily news generation failed at $(date)" >> failure-report.md
        echo "🔍 Check the workflow logs for details" >> failure-report.md
        echo "🔗 Workflow run: $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" >> failure-report.md
        
    - name: Upload failure report
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: failure-report
        path: failure-report.md
        retention-days: 7
